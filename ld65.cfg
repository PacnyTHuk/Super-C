MEMORY {
    MEM_20:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_22:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_24:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_26:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_27:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_28:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_2A:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_2B:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_2C:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_2D:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_2E:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_2F:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_30:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_32:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_33:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_34:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_36:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_38:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_3A:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_3C:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_3E:     start = $C000, size = $4000, fill = yes, fillval = $FF;
}

SEGMENTS {
    BANK_20:    load = MEM_20, align = $4000;
    BANK_20b:   load = MEM_20, start = $BFFF;
    BANK_22:    load = MEM_22, align = $4000;
    BANK_22b:   load = MEM_22, start = $BFFF;
    BANK_24:    load = MEM_24, align = $4000;
    BANK_24b:   load = MEM_24, start = $BFFF;
    BANK_26:    load = MEM_26, align = $2000;
    BANK_27:    load = MEM_27, align = $2000;
    BANK_28:    load = MEM_28, align = $4000;
    BANK_28b:   load = MEM_28, start = $BFFF;
    BANK_2A:    load = MEM_2A, align = $2000;
    BANK_2Ab:   load = MEM_2A, align = $BFFF;
    BANK_2B:    load = MEM_2B, align = $2000;
    BANK_2C:    load = MEM_2C, align = $2000;
    BANK_2D:    load = MEM_2D, align = $2000;
    BANK_2E:    load = MEM_2E, align = $2000;
    BANK_2F:    load = MEM_2F, align = $2000;
    BANK_30:    load = MEM_30, align = $4000;
    BANK_30b:   load = MEM_30, start = $BFFF;
    BANK_32:    load = MEM_32, align = $2000;
    BANK_33:    load = MEM_33, align = $2000;
    BANK_33b:   load = MEM_33, start = $BFFF;
    BANK_34:    load = MEM_34, align = $4000;
    BANK_34b:   load = MEM_34, start = $BFFF;
    BANK_36:    load = MEM_36, align = $4000;
    BANK_36b:   load = MEM_36, start = $BFFF;
    BANK_38:    load = MEM_38, align = $4000;
    BANK_38b:   load = MEM_38, start = $BFFF;
    BANK_3A:    load = MEM_3A, align = $4000;
    BANK_3Ab:   load = MEM_3A, start = $BFFF;
    BANK_3C:    load = MEM_3C, align = $4000;
    BANK_3Cb:   load = MEM_3C, start = $BFFF;
    BANK_3E:    load = MEM_3E, align = $4000;
    MMC5_INIT:  load = MEM_3E, start = $FFD0;
    VECTORS:    load = MEM_3E, start = $FFFA;
}